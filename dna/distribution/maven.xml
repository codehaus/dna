<?xml version="1.0"?>
<project default="main"
    xmlns:doc="doc"
    xmlns:j="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:define="jelly:define"
    xmlns:util="jelly:util"
    xmlns:ant="jelly:ant"
    xmlns:deploy="deploy"
    xmlns:archive="dna:archive">

    <define:taglib uri="dna:archive">
        <define:tag name="copy-deps">
            <j:if test="${projectDescriptor != null}">
                <maven:pom var="pom" projectDescriptor="${projectDescriptor}"/>
            </j:if>

            <j:set var="mavenRepoLocal" value='${context.getVariable("maven.repo.local")}'/>
            <j:forEach var="dep" items="${pom.dependencies}">
                <j:if test='${category.equals(dep.getProperty("category"))}'>
                    <j:set var="addDeps" value='true'/>
                </j:if>
            </j:forEach>

            <j:if test='${addDeps == "true" }'>
                <ant:mkdir dir="${todir}"/>
                <ant:copy todir="${todir}" flatten="true">
                    <ant:fileset dir="${mavenRepoLocal}">
                        <j:forEach var="dep" items="${pom.dependencies}">
                            <j:if test='${category.equals(dep.getProperty("category"))}'>
                                <ant:include name="${dep.artifactDirectory}/jars/${dep.artifact}"/>
                                <ant:include name="${dep.artifactDirectory}/licenses/${dep.artifactId}.license"/>
                            </j:if>
                        </j:forEach>
                    </ant:fileset>
                </ant:copy>
            </j:if>
        </define:tag>
        <define:tag name="deploy">
            <deploy:artifact
                artifact="${maven.build.dir}/${distribution}"
                type="distributions"
                assureDirectoryCommand="mkdir -p"
                siteCommand="cd @deployDirectory@; chmod g+w ${distribution}; chgrp ${maven.remote.group} ${distribution}"
                />
        </define:tag>
    </define:taglib>

    <goal name="main">
        <attainGoal name="build"/>
    </goal>

    <goal name="build">
        <attainGoal name="build:bin"/>
        <attainGoal name="build:src"/>
    </goal>

    <preGoal name="build:bin">
        <maven:maven
            descriptor="../site/project.xml"
            goals="build"
            ignoreFailures="false"/>
    </preGoal>

    <goal name="build:bin">
        <j:set var="distDir" value='${maven.build.dir}/${maven.final.name}'/>
        <ant:mkdir dir="${distDir}/lib"/>
        <archive:copy-deps todir="${distDir}/lib" category="shared"/>
        <archive:copy-deps todir="${distDir}" category="core"/>
        <ant:copy todir="${distDir}">
            <ant:fileset dir="${basedir}/../site/target">
                <ant:include name="docs/**"/>
            </ant:fileset>
        </ant:copy>
        <ant:copy todir="${distDir}">
            <ant:fileset dir="${basedir}/../">
                <ant:include name="LICENSE.txt"/>
            </ant:fileset>
        </ant:copy>

		<!-- Create README.txt -->
        <j:file name="${distDir}/README.txt" omitXmlDeclaration="true" escapeText="false">
            DNA Component Framework: See docs/index.html for documentation.
        </j:file>

        <!-- Create source zip -->
        <ant:zip destfile="${distDir}/src.zip">
            <ant:zipfileset dir="${basedir}/../api/src/java"/>
            <ant:zipfileset dir="${basedir}/../impl/src/java"/>
        </ant:zip>

        <!-- Create a tar.gz file -->
        <ant:tar longfile="gnu" tarfile="${maven.build.dir}/${maven.final.name}.tar">
            <ant:tarfileset dir="${distDir}" prefix="${maven.final.name}"/>
        </ant:tar>

        <ant:gzip zipfile="${maven.build.dir}/${maven.final.name}.tar.gz"
            src="${maven.build.dir}/${maven.final.name}.tar"/>
        <ant:delete file="${maven.build.dir}/${maven.final.name}.tar"/>

        <!-- Create a zip file -->
        <ant:zip destfile="${maven.build.dir}/${maven.final.name}.zip">
            <ant:zipfileset dir="${distDir}" prefix="${maven.final.name}"/>
        </ant:zip>

    </goal>

    <goal name="build:src" prereqs="scm:checkout-project">
        <!-- Create a tar.gz file -->
        <ant:tar longfile="gnu" tarfile="${maven.build.dir}/${maven.final.name.src}.tar">
            <ant:tarfileset dir="${maven.scm.checkout.dir}/${maven.scm.cvs.module}" prefix="${maven.final.name.src}"/>
        </ant:tar>

        <ant:gzip zipfile="${maven.build.dir}/${maven.final.name.src}.tar.gz"
            src="${maven.build.dir}/${maven.final.name.src}.tar"/>
        <ant:delete file="${maven.build.dir}/${maven.final.name.src}.tar"/>

        <!-- Create a zip file -->
        <ant:zip destfile="${maven.build.dir}/${maven.final.name.src}.zip">
            <ant:zipfileset dir="${maven.scm.checkout.dir}/${maven.scm.cvs.module}" prefix="${maven.final.name.src}"/>
        </ant:zip>

    </goal>

    <goal name="deploy" prereqs="build">
        <archive:deploy distribution="${maven.final.name}.zip"/>
        <archive:deploy distribution="${maven.final.name.src}.zip"/>
        <archive:deploy distribution="${maven.final.name}.tar.gz"/>
        <archive:deploy distribution="${maven.final.name.src}.tar.gz"/>
    </goal>

</project>
